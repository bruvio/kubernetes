name: Release
"on":
  push:
    branches:
      - feat/Typhoon
      - next
      - alpha
      - beta
      - "*.x"
permissions:
  contents: read # for checkout
jobs:
  release:
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    name: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install semantic-release and plugins
        run: |
          npm install -g semantic-release@21.0.2 @semantic-release/gitlab @semantic-release/exec @semantic-release/changelog @semantic-release/release-notes-generator @semantic-release/commit-analyzer @semantic-release/git

      - name: Fetch all tags
        run: git fetch --tags

      - name: Determine the last tag (Method 1)
        run: |
          LAST_TAG=$(git for-each-ref --format="%(refname:short)" refs/tags --sort=creatordate | tail -n1)
          echo "LAST_TAG=${LAST_TAG}" >> build.env
          echo "overall LAST TAG is $LAST_TAG"

      - name: Determine the last tag reachable from HEAD (Method 2)
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 --always)
          echo "LAST_TAG=${LAST_TAG}" >> build.env
          echo "VERSION=${LAST_TAG}" >> build.env
          echo "VERSION is $VERSION"

      # pinned version updated automatically by Renovate.
      # details at https://semantic-release.gitbook.io/semantic-release/usage/installation#global-installation
      - run: npx semantic-release@21.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: Fetch updated tags
        run: git fetch --tags

      - name: Update environment variables and create semver.env
        run: |
          LAST_TAG=$(git for-each-ref --format="%(refname:short)" refs/tags --sort=creatordate | tail -n1)
          echo "LAST_TAG=${LAST_TAG}" >> build.env
          echo "overall LAST TAG is $LAST_TAG"
          LAST_TAG=$(git describe --tags --abbrev=0 --always)
          echo "LAST_TAG=${LAST_TAG}" > semver.env
          echo "VERSION=${LAST_TAG}" >> semver.env
          echo "BOOTSTRAP=${{ env.BOOTSTRAP }}" >> semver.env
          echo "SKIP_BUILD=${{ env.SKIP_BUILD }}" >> semver.env
          echo "ALLOW_TRIVY_FAILURE=${{ env.ALLOW_TRIVY_FAILURE }}" >> semver.env
          echo "VERSION is $VERSION"
          cat semver.env

      - name: Upload semver.env artifact
        uses: actions/upload-artifact@v3
        with:
          name: semver-env
          path: ./semver.env

      - name: Set build.env as output
        run: cat build.env
        id: buildenv

      - name: Save environment variables from build.env
        run: |
          echo "LAST_TAG=$(echo '${{ steps.buildenv.outputs.LAST_TAG }}')" >> $GITHUB_ENV
          echo "VERSION=$(echo '${{ steps.buildenv.outputs.VERSION }}')" >> $GITHUB_ENV
